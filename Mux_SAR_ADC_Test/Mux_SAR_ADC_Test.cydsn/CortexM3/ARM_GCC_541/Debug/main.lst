ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	DMA_1_Chan,1,1
  20              		.comm	DMA_1_TD,1,4
  21              		.global	DMAADCResultArray
  22              		.bss
  23              		.align	2
  24              		.type	DMAADCResultArray, %object
  25              		.size	DMAADCResultArray, 4
  26              	DMAADCResultArray:
  27 0000 00000000 		.space	4
  28              		.global	MEMCPYResultArray
  29              		.align	2
  30              		.type	MEMCPYResultArray, %object
  31              		.size	MEMCPYResultArray, 4
  32              	MEMCPYResultArray:
  33 0004 00000000 		.space	4
  34              		.global	APIFUNResultArray
  35              		.align	2
  36              		.type	APIFUNResultArray, %object
  37              		.size	APIFUNResultArray, 4
  38              	APIFUNResultArray:
  39 0008 00000000 		.space	4
  40              		.comm	DMADone,1,1
  41              		.section	.text.main,"ax",%progbits
  42              		.align	2
  43              		.global	main
  44              		.thumb
  45              		.thumb_func
  46              		.type	main, %function
  47              	main:
  48              	.LFB63:
  49              		.file 1 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 2


   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** 
  13:main.c        **** #include <devices.h>
  14:main.c        **** 
  15:main.c        **** /*******************************************************************************
  16:main.c        **** * File: main.c
  17:main.c        **** *
  18:main.c        **** * Version: 3.0
  19:main.c        **** *
  20:main.c        **** * Description:
  21:main.c        **** *   This is a basic design source code.
  22:main.c        **** *
  23:main.c        **** ********************************************************************************/
  24:main.c        **** 
  25:main.c        **** /* Variable declarations for DMA_1 */
  26:main.c        **** uint8 DMA_1_Chan;
  27:main.c        **** uint8 DMA_1_TD[1];
  28:main.c        **** 
  29:main.c        **** 	/* Compare the values extracted from the ADC using DMA, memcpy and using the API */
  30:main.c        **** 	 int16 DMAADCResultArray[ADC_SAR_Seq_1_NUMBER_OF_CHANNELS] = {0};   // *** CHANGED FROM UINT16 ***
  31:main.c        **** 	 int16 MEMCPYResultArray[ADC_SAR_Seq_1_NUMBER_OF_CHANNELS] = {0};   // *** CHANGED FROM UINT16 ***
  32:main.c        **** 	 int16 APIFUNResultArray[ADC_SAR_Seq_1_NUMBER_OF_CHANNELS] = {0};   // *** CHANGED FROM UINT16 ***
  33:main.c        **** 
  34:main.c        **** 
  35:main.c        **** /* DMA Configuration for DMA_1 */
  36:main.c        **** #define DMA_BYTES_PER_BURST 2*ADC_SAR_Seq_1_NUMBER_OF_CHANNELS	//Each TD handles all channels, 1 16
  37:main.c        **** #define DMA_REQUEST_PER_BURST 1
  38:main.c        **** #define DMA_SRC_BASE (CYDEV_SRAM_BASE)	//Regular ADCs result is DMA'd from the Peripheral Spoke. Th
  39:main.c        **** #define DMA_DST_BASE (CYDEV_SRAM_BASE)
  40:main.c        **** 
  41:main.c        **** /* The number of samples of each channel to capture */
  42:main.c        **** #define NumRepsToCapture 100
  43:main.c        **** 
  44:main.c        **** /* Interrupt Flag */
  45:main.c        **** volatile uint8 DMADone;
  46:main.c        **** 
  47:main.c        **** /*******************************************************************************
  48:main.c        **** * Function Name: main
  49:main.c        **** ********************************************************************************
  50:main.c        **** * Summary:
  51:main.c        **** * Main function performs following functions:
  52:main.c        **** * 1: Start the clock
  53:main.c        **** * 2: Start the Timer
  54:main.c        **** * 3: Start the interrupts
  55:main.c        **** * 4: Start ADC DelSig and its interrupts
  56:main.c        **** * 5: Testing for sample available from ADC
  57:main.c        **** * 6: Storing the sample into the array
  58:main.c        **** * 7: Comparing the samples
  59:main.c        **** *
  60:main.c        **** * Parameters:
  61:main.c        **** *  None.
  62:main.c        **** *
  63:main.c        **** * Return:
  64:main.c        **** *  None.
  65:main.c        **** *
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 3


  66:main.c        **** *******************************************************************************/        
  67:main.c        **** 
  68:main.c        **** int main()
  69:main.c        **** {
  50              		.loc 1 69 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 8
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 90B5     		push	{r4, r7, lr}
  55              		.cfi_def_cfa_offset 12
  56              		.cfi_offset 4, -12
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 83B0     		sub	sp, sp, #12
  60              		.cfi_def_cfa_offset 24
  61 0004 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
  70:main.c        **** 	uint16 chan=0;
  63              		.loc 1 70 0
  64 0006 0023     		movs	r3, #0
  65 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  71:main.c        ****     uint16 print_nmbr;
  72:main.c        **** 	
  73:main.c        **** 	DMADone = 0;	//When the TD completed the DMA transfer this flag is set by the ISR
  66              		.loc 1 73 0
  67 000a 3C4B     		ldr	r3, .L6
  68 000c 0022     		movs	r2, #0
  69 000e 1A70     		strb	r2, [r3]
  74:main.c        **** 	
  75:main.c        ****     /* Enable global interrupts */
  76:main.c        ****     CyGlobalIntEnable;
  70              		.loc 1 76 0
  71              		.syntax unified
  72              	@ 76 "main.c" 1
  73 0010 62B6     		CPSIE   i
  74              	@ 0 "" 2
  77:main.c        ****     
  78:main.c        **** 	//////////////////////////////
  79:main.c        **** 	// Configure the DMA
  80:main.c        **** 	//////////////////////////////
  81:main.c        ****     /* Initializing DMA_1 */
  82:main.c        ****     DMA_1_Chan = DMA_1_DmaInitialize(DMA_BYTES_PER_BURST, DMA_REQUEST_PER_BURST,
  75              		.loc 1 82 0
  76              		.thumb
  77              		.syntax unified
  78 0012 41F6FF73 		movw	r3, #8191
  79 0016 41F6FF72 		movw	r2, #8191
  80 001a 0121     		movs	r1, #1
  81 001c 0420     		movs	r0, #4
  82 001e FFF7FEFF 		bl	DMA_1_DmaInitialize
  83 0022 0346     		mov	r3, r0
  84 0024 1A46     		mov	r2, r3
  85 0026 364B     		ldr	r3, .L6+4
  86 0028 1A70     		strb	r2, [r3]
  83:main.c        ****                                      HI16(DMA_SRC_BASE),  HI16(DMA_DST_BASE));
  84:main.c        **** 
  85:main.c        **** 	/* Allocate a TD for each channel */
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 4


  86:main.c        **** 	DMA_1_TD[0] = CyDmaTdAllocate();
  87              		.loc 1 86 0
  88 002a FFF7FEFF 		bl	CyDmaTdAllocate
  89 002e 0346     		mov	r3, r0
  90 0030 1A46     		mov	r2, r3
  91 0032 344B     		ldr	r3, .L6+8
  92 0034 1A70     		strb	r2, [r3]
  87:main.c        **** 	
  88:main.c        **** 	//step through and setup each TD
  89:main.c        **** 	CyDmaTdSetConfiguration(DMA_1_TD[0], 
  93              		.loc 1 89 0
  94 0036 334B     		ldr	r3, .L6+8
  95 0038 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  96 003a 0223     		movs	r3, #2
  97 003c FE22     		movs	r2, #254
  98 003e 0421     		movs	r1, #4
  99 0040 FFF7FEFF 		bl	CyDmaTdSetConfiguration
  90:main.c        **** 							DMA_BYTES_PER_BURST,
  91:main.c        **** 							DMA_DISABLE_TD,
  92:main.c        **** 							DMA_1__TD_TERMOUT_EN | CY_DMA_TD_INC_DST_ADR );
  93:main.c        ****     
  94:main.c        ****     /* Configuring the TD address for the transfer. Sequencer ADC results are stored in ADC_SAR_Seq
  95:main.c        ****     CyDmaTdSetAddress(DMA_1_TD[0], LO16((uint32)(ADC_SAR_Seq_1_finalArray)), LO16((uint32)(DMAADCRe
 100              		.loc 1 95 0
 101 0044 2F4B     		ldr	r3, .L6+8
 102 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 103 0048 2F4A     		ldr	r2, .L6+12
 104 004a 91B2     		uxth	r1, r2
 105 004c 2F4A     		ldr	r2, .L6+16
 106 004e 92B2     		uxth	r2, r2
 107 0050 1846     		mov	r0, r3
 108 0052 FFF7FEFF 		bl	CyDmaTdSetAddress
  96:main.c        ****     
  97:main.c        ****     /* Setting initial TD */
  98:main.c        ****     CyDmaChSetInitialTd(DMA_1_Chan, DMA_1_TD[0]);
 109              		.loc 1 98 0
 110 0056 2A4B     		ldr	r3, .L6+4
 111 0058 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 112 005a 2A4B     		ldr	r3, .L6+8
 113 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 114 005e 1946     		mov	r1, r3
 115 0060 1046     		mov	r0, r2
 116 0062 FFF7FEFF 		bl	CyDmaChSetInitialTd
  99:main.c        **** 
 100:main.c        **** 	//////////////////////////
 101:main.c        **** 	// Start Components
 102:main.c        **** 	//////////////////////////
 103:main.c        **** 	
 104:main.c        **** 	/* ISR Start */
 105:main.c        **** 	isr_1_Start();
 117              		.loc 1 105 0
 118 0066 FFF7FEFF 		bl	isr_1_Start
 106:main.c        ****     // isr_1_StartEx(isr_1);
 107:main.c        ****     //LCD_Start();
 108:main.c        **** 	
 109:main.c        ****     /* Enable the DMA channel */
 110:main.c        ****     CyDmaChEnable(DMA_1_Chan, 1);
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 5


 119              		.loc 1 110 0
 120 006a 254B     		ldr	r3, .L6+4
 121 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 122 006e 0121     		movs	r1, #1
 123 0070 1846     		mov	r0, r3
 124 0072 FFF7FEFF 		bl	CyDmaChEnable
 111:main.c        **** 
 112:main.c        **** 	/* Start the ADC */
 113:main.c        ****     ADC_SAR_Seq_1_Start();
 125              		.loc 1 113 0
 126 0076 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 114:main.c        **** 	ADC_SAR_Seq_1_IRQ_Disable();	//we're not using the internal interrupt
 127              		.loc 1 114 0
 128 007a FFF7FEFF 		bl	ADC_SAR_Seq_1_IRQ_Disable
 115:main.c        **** 	ADC_SAR_Seq_1_StartConvert();
 129              		.loc 1 115 0
 130 007e FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 116:main.c        **** 	CyDelay(1000);	//give the ADC time to settle
 131              		.loc 1 116 0
 132 0082 4FF47A70 		mov	r0, #1000
 133 0086 FFF7FEFF 		bl	CyDelay
 134              	.L5:
 117:main.c        **** 	
 118:main.c        ****     for(;;) {
 119:main.c        **** 		// Capture the requested data...the DMADone flag will set when complete
 120:main.c        **** 		if(DMADone == 1)
 135              		.loc 1 120 0
 136 008a 1C4B     		ldr	r3, .L6
 137 008c 1B78     		ldrb	r3, [r3]
 138 008e DBB2     		uxtb	r3, r3
 139 0090 012B     		cmp	r3, #1
 140 0092 FAD1     		bne	.L5
 121:main.c        **** 		{
 122:main.c        **** 			//reset the DMA done flag
 123:main.c        **** 			DMADone = 0;
 141              		.loc 1 123 0
 142 0094 194B     		ldr	r3, .L6
 143 0096 0022     		movs	r2, #0
 144 0098 1A70     		strb	r2, [r3]
 124:main.c        ****             ADC_SAR_Seq_1_StopConvert();
 145              		.loc 1 124 0
 146 009a FFF7FEFF 		bl	ADC_SAR_Seq_1_StopConvert
 125:main.c        **** 			
 126:main.c        **** 			//////////////////////////////////////////////////// 
 127:main.c        **** 			// Grab the result values manually for comparison:
 128:main.c        **** 			////////////////////////////////////////////////////
 129:main.c        **** 			
 130:main.c        **** 			// USING THE API
 131:main.c        **** 			/* Channel results are saved in reverse order in the results array. Store them so they appear in
 132:main.c        **** //            if (ADC_SAR_Seq_1_IsEndConversion(ADC_SAR_Seq_1_WAIT_FOR_RESULT))
 133:main.c        **** //            {
 134:main.c        **** 			for(chan = 0; chan < ADC_SAR_Seq_1_NUMBER_OF_CHANNELS; chan++)
 147              		.loc 1 134 0
 148 009e 0023     		movs	r3, #0
 149 00a0 FB80     		strh	r3, [r7, #6]	@ movhi
 150 00a2 13E0     		b	.L3
 151              	.L4:
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 6


 135:main.c        **** 			{
 136:main.c        ****                 
 137:main.c        **** 				APIFUNResultArray[chan] = ADC_SAR_Seq_1_CountsTo_mVolts(ADC_SAR_Seq_1_GetResult16(ADC_SAR_Seq_1
 152              		.loc 1 137 0 discriminator 3
 153 00a4 FC88     		ldrh	r4, [r7, #6]
 154 00a6 FB88     		ldrh	r3, [r7, #6]	@ movhi
 155 00a8 C3F10103 		rsb	r3, r3, #1
 156 00ac 9BB2     		uxth	r3, r3
 157 00ae 1846     		mov	r0, r3
 158 00b0 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 159 00b4 0346     		mov	r3, r0
 160 00b6 1846     		mov	r0, r3
 161 00b8 FFF7FEFF 		bl	ADC_SAR_Seq_1_CountsTo_mVolts
 162 00bc 0346     		mov	r3, r0
 163 00be 1AB2     		sxth	r2, r3
 164 00c0 134B     		ldr	r3, .L6+20
 165 00c2 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 134:main.c        **** 			{
 166              		.loc 1 134 0 discriminator 3
 167 00c6 FB88     		ldrh	r3, [r7, #6]
 168 00c8 0133     		adds	r3, r3, #1
 169 00ca FB80     		strh	r3, [r7, #6]	@ movhi
 170              	.L3:
 134:main.c        **** 			{
 171              		.loc 1 134 0 is_stmt 0 discriminator 1
 172 00cc FB88     		ldrh	r3, [r7, #6]
 173 00ce 012B     		cmp	r3, #1
 174 00d0 E8D9     		bls	.L4
 138:main.c        **** 			}
 139:main.c        **** //            }
 140:main.c        **** 
 141:main.c        **** 			// USING MEMCPY
 142:main.c        **** /*
 143:main.c        ****  Jerry says "Why use the following line? We already have the result of the conversion in APIFUNResu
 144:main.c        ****     It probably won't work anyway because the sar's finalArray is probably already cleared by the G
 145:main.c        **** 			memcpy(MEMCPYResultArray,ADC_SAR_Seq_1_finalArray,ADC_SAR_Seq_1_NUMBER_OF_CHANNELS*sizeof(uint16
 146:main.c        ****     INSTEAD, use the following line to move data to a different array.
 147:main.c        ****             
 148:main.c        ****     NOTE: the ISR HAS BEEN MOVED to the eoc of the SAR. By the time you get to this line of code, t
 149:main.c        ****     Now that we have Read the conversion results we have the lesure of doing whatever we want with 
 150:main.c        **** */
 151:main.c        **** 			memcpy(MEMCPYResultArray, APIFUNResultArray, ADC_SAR_Seq_1_NUMBER_OF_CHANNELS*sizeof(uint16));
 175              		.loc 1 151 0 is_stmt 1
 176 00d2 0F4B     		ldr	r3, .L6+20
 177 00d4 1B68     		ldr	r3, [r3]
 178 00d6 0F4A     		ldr	r2, .L6+24
 179 00d8 1360     		str	r3, [r2]
 152:main.c        ****             
 153:main.c        **** //  And if your want, do it again to move it to an offset from the MEMCPYResultArray -- say 12 byte
 154:main.c        **** //  That is, move the APIFUNResultArray anywhere you want in SRAM.
 155:main.c        **** //  NOTE: We moved all the arrays out of main{} into global variables and removed the "static" clas
 156:main.c        **** //       Now they are mapped into high SRAM as you can see in the Results Tab under Mux_SAR_ADC_Tes
 157:main.c        ****             
 158:main.c        ****                     /* ***  First line of LCD Screen - DO ANYTHING YOU WANT WITH THIS ARRAY  */
 159:main.c        ****             //LCD_Position(0, 0); CyDelay(10);  LCD_PrintString("               ");
 160:main.c        ****             //LCD_Position(0, 0);
 161:main.c        ****             print_nmbr = MEMCPYResultArray[0];
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 7


 180              		.loc 1 161 0
 181 00da 0E4B     		ldr	r3, .L6+24
 182 00dc B3F90030 		ldrsh	r3, [r3]
 183 00e0 BB80     		strh	r3, [r7, #4]	@ movhi
 162:main.c        ****             //LCD_PrintNumber(print_nmbr);
 163:main.c        ****             //LCD_Position(0, 6);
 164:main.c        ****             print_nmbr = MEMCPYResultArray[1];
 184              		.loc 1 164 0
 185 00e2 0C4B     		ldr	r3, .L6+24
 186 00e4 B3F90230 		ldrsh	r3, [r3, #2]
 187 00e8 BB80     		strh	r3, [r7, #4]	@ movhi
 165:main.c        ****             //LCD_PrintNumber(print_nmbr);
 166:main.c        ****             //LCD_Position(0, 11);
 167:main.c        ****            //print_nmbr = MEMCPYResultArray[2];
 168:main.c        ****             //LCD_PrintNumber(print_nmbr);
 169:main.c        **** 
 170:main.c        ****                     /* ***  Second line of LCD Screen - ANALOG INPUT  */
 171:main.c        ****             //LCD_Position(1, 0); CyDelay(10);  LCD_PrintString("               ");
 172:main.c        ****             //LCD_Position(1, 0);
 173:main.c        ****            //print_nmbr = APIFUNResultArray[3];
 174:main.c        ****             //LCD_PrintNumber(print_nmbr);
 175:main.c        ****             //LCD_Position(1, 6);
 176:main.c        ****            //print_nmbr = APIFUNResultArray[3];
 177:main.c        ****             //LCD_PrintNumber(print_nmbr);
 178:main.c        ****             //LCD_Position(1, 11);
 179:main.c        ****            //print_nmbr = APIFUNResultArray[4]; 
 180:main.c        ****             //LCD_PrintNumber(print_nmbr);
 181:main.c        **** 
 182:main.c        **** 			
 183:main.c        **** 			//////////////////////////////////////////////////////
 184:main.c        **** 			// Put a breakpoint at the next line so that the values in
 185:main.c        **** 			// the result arrays can be compared.
 186:main.c        **** 			//////////////////////////////////////////////////////
 187:main.c        **** 			
 188:main.c        **** 			/* Enable the DMA channel again */
 189:main.c        ****     		CyDmaChEnable(DMA_1_Chan, 1);
 188              		.loc 1 189 0
 189 00ea 054B     		ldr	r3, .L6+4
 190 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 191 00ee 0121     		movs	r1, #1
 192 00f0 1846     		mov	r0, r3
 193 00f2 FFF7FEFF 		bl	CyDmaChEnable
 190:main.c        ****             ADC_SAR_Seq_1_StartConvert();   // Let's go another round
 194              		.loc 1 190 0
 195 00f6 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 191:main.c        **** 		}
 192:main.c        **** 	}
 196              		.loc 1 192 0
 197 00fa C6E7     		b	.L5
 198              	.L7:
 199              		.align	2
 200              	.L6:
 201 00fc 00000000 		.word	DMADone
 202 0100 00000000 		.word	DMA_1_Chan
 203 0104 00000000 		.word	DMA_1_TD
 204 0108 00000000 		.word	ADC_SAR_Seq_1_finalArray
 205 010c 00000000 		.word	DMAADCResultArray
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 8


 206 0110 00000000 		.word	APIFUNResultArray
 207 0114 00000000 		.word	MEMCPYResultArray
 208              		.cfi_endproc
 209              	.LFE63:
 210              		.size	main, .-main
 211              		.text
 212              	.Letext0:
 213              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 214              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 215              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 216              		.file 5 "Generated_Source\\PSoC5/ADC_SAR_Seq_1.h"
 217              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 218              		.section	.debug_info,"",%progbits
 219              	.Ldebug_info0:
 220 0000 AE010000 		.4byte	0x1ae
 221 0004 0400     		.2byte	0x4
 222 0006 00000000 		.4byte	.Ldebug_abbrev0
 223 000a 04       		.byte	0x4
 224 000b 01       		.uleb128 0x1
 225 000c AA010000 		.4byte	.LASF30
 226 0010 0C       		.byte	0xc
 227 0011 6D010000 		.4byte	.LASF31
 228 0015 39000000 		.4byte	.LASF32
 229 0019 00000000 		.4byte	.Ldebug_ranges0+0
 230 001d 00000000 		.4byte	0
 231 0021 00000000 		.4byte	.Ldebug_line0
 232 0025 02       		.uleb128 0x2
 233 0026 01       		.byte	0x1
 234 0027 06       		.byte	0x6
 235 0028 9E010000 		.4byte	.LASF0
 236 002c 02       		.uleb128 0x2
 237 002d 01       		.byte	0x1
 238 002e 08       		.byte	0x8
 239 002f F2000000 		.4byte	.LASF1
 240 0033 02       		.uleb128 0x2
 241 0034 02       		.byte	0x2
 242 0035 05       		.byte	0x5
 243 0036 79010000 		.4byte	.LASF2
 244 003a 02       		.uleb128 0x2
 245 003b 02       		.byte	0x2
 246 003c 07       		.byte	0x7
 247 003d C9000000 		.4byte	.LASF3
 248 0041 03       		.uleb128 0x3
 249 0042 1D000000 		.4byte	.LASF9
 250 0046 02       		.byte	0x2
 251 0047 3F       		.byte	0x3f
 252 0048 4C000000 		.4byte	0x4c
 253 004c 02       		.uleb128 0x2
 254 004d 04       		.byte	0x4
 255 004e 05       		.byte	0x5
 256 004f 89010000 		.4byte	.LASF4
 257 0053 02       		.uleb128 0x2
 258 0054 04       		.byte	0x4
 259 0055 07       		.byte	0x7
 260 0056 B7000000 		.4byte	.LASF5
 261 005a 02       		.uleb128 0x2
 262 005b 08       		.byte	0x8
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 9


 263 005c 05       		.byte	0x5
 264 005d 5F010000 		.4byte	.LASF6
 265 0061 02       		.uleb128 0x2
 266 0062 08       		.byte	0x8
 267 0063 07       		.byte	0x7
 268 0064 32010000 		.4byte	.LASF7
 269 0068 04       		.uleb128 0x4
 270 0069 04       		.byte	0x4
 271 006a 05       		.byte	0x5
 272 006b 696E7400 		.ascii	"int\000"
 273 006f 02       		.uleb128 0x2
 274 0070 04       		.byte	0x4
 275 0071 07       		.byte	0x7
 276 0072 25010000 		.4byte	.LASF8
 277 0076 03       		.uleb128 0x3
 278 0077 4E010000 		.4byte	.LASF10
 279 007b 03       		.byte	0x3
 280 007c 2C       		.byte	0x2c
 281 007d 41000000 		.4byte	0x41
 282 0081 05       		.uleb128 0x5
 283 0082 83010000 		.4byte	.LASF11
 284 0086 04       		.byte	0x4
 285 0087 E901     		.2byte	0x1e9
 286 0089 2C000000 		.4byte	0x2c
 287 008d 05       		.uleb128 0x5
 288 008e 17010000 		.4byte	.LASF12
 289 0092 04       		.byte	0x4
 290 0093 EA01     		.2byte	0x1ea
 291 0095 3A000000 		.4byte	0x3a
 292 0099 05       		.uleb128 0x5
 293 009a 1E010000 		.4byte	.LASF13
 294 009e 04       		.byte	0x4
 295 009f EB01     		.2byte	0x1eb
 296 00a1 53000000 		.4byte	0x53
 297 00a5 05       		.uleb128 0x5
 298 00a6 B1000000 		.4byte	.LASF14
 299 00aa 04       		.byte	0x4
 300 00ab ED01     		.2byte	0x1ed
 301 00ad 33000000 		.4byte	0x33
 302 00b1 02       		.uleb128 0x2
 303 00b2 04       		.byte	0x4
 304 00b3 04       		.byte	0x4
 305 00b4 92000000 		.4byte	.LASF15
 306 00b8 02       		.uleb128 0x2
 307 00b9 08       		.byte	0x8
 308 00ba 04       		.byte	0x4
 309 00bb 00010000 		.4byte	.LASF16
 310 00bf 02       		.uleb128 0x2
 311 00c0 01       		.byte	0x1
 312 00c1 08       		.byte	0x8
 313 00c2 74010000 		.4byte	.LASF17
 314 00c6 06       		.uleb128 0x6
 315 00c7 81000000 		.4byte	0x81
 316 00cb 02       		.uleb128 0x2
 317 00cc 08       		.byte	0x8
 318 00cd 04       		.byte	0x4
 319 00ce 92010000 		.4byte	.LASF18
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 10


 320 00d2 02       		.uleb128 0x2
 321 00d3 04       		.byte	0x4
 322 00d4 07       		.byte	0x7
 323 00d5 56010000 		.4byte	.LASF19
 324 00d9 07       		.uleb128 0x7
 325 00da 07010000 		.4byte	.LASF33
 326 00de 01       		.byte	0x1
 327 00df 44       		.byte	0x44
 328 00e0 68000000 		.4byte	0x68
 329 00e4 00000000 		.4byte	.LFB63
 330 00e8 18010000 		.4byte	.LFE63-.LFB63
 331 00ec 01       		.uleb128 0x1
 332 00ed 9C       		.byte	0x9c
 333 00ee 0F010000 		.4byte	0x10f
 334 00f2 08       		.uleb128 0x8
 335 00f3 49010000 		.4byte	.LASF20
 336 00f7 01       		.byte	0x1
 337 00f8 46       		.byte	0x46
 338 00f9 8D000000 		.4byte	0x8d
 339 00fd 02       		.uleb128 0x2
 340 00fe 91       		.byte	0x91
 341 00ff 6E       		.sleb128 -18
 342 0100 08       		.uleb128 0x8
 343 0101 0C010000 		.4byte	.LASF21
 344 0105 01       		.byte	0x1
 345 0106 47       		.byte	0x47
 346 0107 8D000000 		.4byte	0x8d
 347 010b 02       		.uleb128 0x2
 348 010c 91       		.byte	0x91
 349 010d 6C       		.sleb128 -20
 350 010e 00       		.byte	0
 351 010f 09       		.uleb128 0x9
 352 0110 A5000000 		.4byte	0xa5
 353 0114 1F010000 		.4byte	0x11f
 354 0118 0A       		.uleb128 0xa
 355 0119 D2000000 		.4byte	0xd2
 356 011d 01       		.byte	0x1
 357 011e 00       		.byte	0
 358 011f 0B       		.uleb128 0xb
 359 0120 98000000 		.4byte	.LASF22
 360 0124 05       		.byte	0x5
 361 0125 21       		.byte	0x21
 362 0126 0F010000 		.4byte	0x10f
 363 012a 0C       		.uleb128 0xc
 364 012b E5000000 		.4byte	.LASF23
 365 012f 06       		.byte	0x6
 366 0130 1207     		.2byte	0x712
 367 0132 36010000 		.4byte	0x136
 368 0136 06       		.uleb128 0x6
 369 0137 76000000 		.4byte	0x76
 370 013b 0D       		.uleb128 0xd
 371 013c 00000000 		.4byte	.LASF24
 372 0140 01       		.byte	0x1
 373 0141 1A       		.byte	0x1a
 374 0142 81000000 		.4byte	0x81
 375 0146 05       		.uleb128 0x5
 376 0147 03       		.byte	0x3
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 11


 377 0148 00000000 		.4byte	DMA_1_Chan
 378 014c 09       		.uleb128 0x9
 379 014d 81000000 		.4byte	0x81
 380 0151 5C010000 		.4byte	0x15c
 381 0155 0A       		.uleb128 0xa
 382 0156 D2000000 		.4byte	0xd2
 383 015a 00       		.byte	0
 384 015b 00       		.byte	0
 385 015c 0D       		.uleb128 0xd
 386 015d DC000000 		.4byte	.LASF25
 387 0161 01       		.byte	0x1
 388 0162 1B       		.byte	0x1b
 389 0163 4C010000 		.4byte	0x14c
 390 0167 05       		.uleb128 0x5
 391 0168 03       		.byte	0x3
 392 0169 00000000 		.4byte	DMA_1_TD
 393 016d 0D       		.uleb128 0xd
 394 016e 27000000 		.4byte	.LASF26
 395 0172 01       		.byte	0x1
 396 0173 1E       		.byte	0x1e
 397 0174 0F010000 		.4byte	0x10f
 398 0178 05       		.uleb128 0x5
 399 0179 03       		.byte	0x3
 400 017a 00000000 		.4byte	DMAADCResultArray
 401 017e 0D       		.uleb128 0xd
 402 017f 80000000 		.4byte	.LASF27
 403 0183 01       		.byte	0x1
 404 0184 1F       		.byte	0x1f
 405 0185 0F010000 		.4byte	0x10f
 406 0189 05       		.uleb128 0x5
 407 018a 03       		.byte	0x3
 408 018b 00000000 		.4byte	MEMCPYResultArray
 409 018f 0D       		.uleb128 0xd
 410 0190 0B000000 		.4byte	.LASF28
 411 0194 01       		.byte	0x1
 412 0195 20       		.byte	0x20
 413 0196 0F010000 		.4byte	0x10f
 414 019a 05       		.uleb128 0x5
 415 019b 03       		.byte	0x3
 416 019c 00000000 		.4byte	APIFUNResultArray
 417 01a0 0D       		.uleb128 0xd
 418 01a1 78000000 		.4byte	.LASF29
 419 01a5 01       		.byte	0x1
 420 01a6 2D       		.byte	0x2d
 421 01a7 C6000000 		.4byte	0xc6
 422 01ab 05       		.uleb128 0x5
 423 01ac 03       		.byte	0x3
 424 01ad 00000000 		.4byte	DMADone
 425 01b1 00       		.byte	0
 426              		.section	.debug_abbrev,"",%progbits
 427              	.Ldebug_abbrev0:
 428 0000 01       		.uleb128 0x1
 429 0001 11       		.uleb128 0x11
 430 0002 01       		.byte	0x1
 431 0003 25       		.uleb128 0x25
 432 0004 0E       		.uleb128 0xe
 433 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 12


 434 0006 0B       		.uleb128 0xb
 435 0007 03       		.uleb128 0x3
 436 0008 0E       		.uleb128 0xe
 437 0009 1B       		.uleb128 0x1b
 438 000a 0E       		.uleb128 0xe
 439 000b 55       		.uleb128 0x55
 440 000c 17       		.uleb128 0x17
 441 000d 11       		.uleb128 0x11
 442 000e 01       		.uleb128 0x1
 443 000f 10       		.uleb128 0x10
 444 0010 17       		.uleb128 0x17
 445 0011 00       		.byte	0
 446 0012 00       		.byte	0
 447 0013 02       		.uleb128 0x2
 448 0014 24       		.uleb128 0x24
 449 0015 00       		.byte	0
 450 0016 0B       		.uleb128 0xb
 451 0017 0B       		.uleb128 0xb
 452 0018 3E       		.uleb128 0x3e
 453 0019 0B       		.uleb128 0xb
 454 001a 03       		.uleb128 0x3
 455 001b 0E       		.uleb128 0xe
 456 001c 00       		.byte	0
 457 001d 00       		.byte	0
 458 001e 03       		.uleb128 0x3
 459 001f 16       		.uleb128 0x16
 460 0020 00       		.byte	0
 461 0021 03       		.uleb128 0x3
 462 0022 0E       		.uleb128 0xe
 463 0023 3A       		.uleb128 0x3a
 464 0024 0B       		.uleb128 0xb
 465 0025 3B       		.uleb128 0x3b
 466 0026 0B       		.uleb128 0xb
 467 0027 49       		.uleb128 0x49
 468 0028 13       		.uleb128 0x13
 469 0029 00       		.byte	0
 470 002a 00       		.byte	0
 471 002b 04       		.uleb128 0x4
 472 002c 24       		.uleb128 0x24
 473 002d 00       		.byte	0
 474 002e 0B       		.uleb128 0xb
 475 002f 0B       		.uleb128 0xb
 476 0030 3E       		.uleb128 0x3e
 477 0031 0B       		.uleb128 0xb
 478 0032 03       		.uleb128 0x3
 479 0033 08       		.uleb128 0x8
 480 0034 00       		.byte	0
 481 0035 00       		.byte	0
 482 0036 05       		.uleb128 0x5
 483 0037 16       		.uleb128 0x16
 484 0038 00       		.byte	0
 485 0039 03       		.uleb128 0x3
 486 003a 0E       		.uleb128 0xe
 487 003b 3A       		.uleb128 0x3a
 488 003c 0B       		.uleb128 0xb
 489 003d 3B       		.uleb128 0x3b
 490 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 13


 491 003f 49       		.uleb128 0x49
 492 0040 13       		.uleb128 0x13
 493 0041 00       		.byte	0
 494 0042 00       		.byte	0
 495 0043 06       		.uleb128 0x6
 496 0044 35       		.uleb128 0x35
 497 0045 00       		.byte	0
 498 0046 49       		.uleb128 0x49
 499 0047 13       		.uleb128 0x13
 500 0048 00       		.byte	0
 501 0049 00       		.byte	0
 502 004a 07       		.uleb128 0x7
 503 004b 2E       		.uleb128 0x2e
 504 004c 01       		.byte	0x1
 505 004d 3F       		.uleb128 0x3f
 506 004e 19       		.uleb128 0x19
 507 004f 03       		.uleb128 0x3
 508 0050 0E       		.uleb128 0xe
 509 0051 3A       		.uleb128 0x3a
 510 0052 0B       		.uleb128 0xb
 511 0053 3B       		.uleb128 0x3b
 512 0054 0B       		.uleb128 0xb
 513 0055 49       		.uleb128 0x49
 514 0056 13       		.uleb128 0x13
 515 0057 11       		.uleb128 0x11
 516 0058 01       		.uleb128 0x1
 517 0059 12       		.uleb128 0x12
 518 005a 06       		.uleb128 0x6
 519 005b 40       		.uleb128 0x40
 520 005c 18       		.uleb128 0x18
 521 005d 9642     		.uleb128 0x2116
 522 005f 19       		.uleb128 0x19
 523 0060 01       		.uleb128 0x1
 524 0061 13       		.uleb128 0x13
 525 0062 00       		.byte	0
 526 0063 00       		.byte	0
 527 0064 08       		.uleb128 0x8
 528 0065 34       		.uleb128 0x34
 529 0066 00       		.byte	0
 530 0067 03       		.uleb128 0x3
 531 0068 0E       		.uleb128 0xe
 532 0069 3A       		.uleb128 0x3a
 533 006a 0B       		.uleb128 0xb
 534 006b 3B       		.uleb128 0x3b
 535 006c 0B       		.uleb128 0xb
 536 006d 49       		.uleb128 0x49
 537 006e 13       		.uleb128 0x13
 538 006f 02       		.uleb128 0x2
 539 0070 18       		.uleb128 0x18
 540 0071 00       		.byte	0
 541 0072 00       		.byte	0
 542 0073 09       		.uleb128 0x9
 543 0074 01       		.uleb128 0x1
 544 0075 01       		.byte	0x1
 545 0076 49       		.uleb128 0x49
 546 0077 13       		.uleb128 0x13
 547 0078 01       		.uleb128 0x1
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 14


 548 0079 13       		.uleb128 0x13
 549 007a 00       		.byte	0
 550 007b 00       		.byte	0
 551 007c 0A       		.uleb128 0xa
 552 007d 21       		.uleb128 0x21
 553 007e 00       		.byte	0
 554 007f 49       		.uleb128 0x49
 555 0080 13       		.uleb128 0x13
 556 0081 2F       		.uleb128 0x2f
 557 0082 0B       		.uleb128 0xb
 558 0083 00       		.byte	0
 559 0084 00       		.byte	0
 560 0085 0B       		.uleb128 0xb
 561 0086 34       		.uleb128 0x34
 562 0087 00       		.byte	0
 563 0088 03       		.uleb128 0x3
 564 0089 0E       		.uleb128 0xe
 565 008a 3A       		.uleb128 0x3a
 566 008b 0B       		.uleb128 0xb
 567 008c 3B       		.uleb128 0x3b
 568 008d 0B       		.uleb128 0xb
 569 008e 49       		.uleb128 0x49
 570 008f 13       		.uleb128 0x13
 571 0090 3F       		.uleb128 0x3f
 572 0091 19       		.uleb128 0x19
 573 0092 3C       		.uleb128 0x3c
 574 0093 19       		.uleb128 0x19
 575 0094 00       		.byte	0
 576 0095 00       		.byte	0
 577 0096 0C       		.uleb128 0xc
 578 0097 34       		.uleb128 0x34
 579 0098 00       		.byte	0
 580 0099 03       		.uleb128 0x3
 581 009a 0E       		.uleb128 0xe
 582 009b 3A       		.uleb128 0x3a
 583 009c 0B       		.uleb128 0xb
 584 009d 3B       		.uleb128 0x3b
 585 009e 05       		.uleb128 0x5
 586 009f 49       		.uleb128 0x49
 587 00a0 13       		.uleb128 0x13
 588 00a1 3F       		.uleb128 0x3f
 589 00a2 19       		.uleb128 0x19
 590 00a3 3C       		.uleb128 0x3c
 591 00a4 19       		.uleb128 0x19
 592 00a5 00       		.byte	0
 593 00a6 00       		.byte	0
 594 00a7 0D       		.uleb128 0xd
 595 00a8 34       		.uleb128 0x34
 596 00a9 00       		.byte	0
 597 00aa 03       		.uleb128 0x3
 598 00ab 0E       		.uleb128 0xe
 599 00ac 3A       		.uleb128 0x3a
 600 00ad 0B       		.uleb128 0xb
 601 00ae 3B       		.uleb128 0x3b
 602 00af 0B       		.uleb128 0xb
 603 00b0 49       		.uleb128 0x49
 604 00b1 13       		.uleb128 0x13
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 15


 605 00b2 3F       		.uleb128 0x3f
 606 00b3 19       		.uleb128 0x19
 607 00b4 02       		.uleb128 0x2
 608 00b5 18       		.uleb128 0x18
 609 00b6 00       		.byte	0
 610 00b7 00       		.byte	0
 611 00b8 00       		.byte	0
 612              		.section	.debug_aranges,"",%progbits
 613 0000 1C000000 		.4byte	0x1c
 614 0004 0200     		.2byte	0x2
 615 0006 00000000 		.4byte	.Ldebug_info0
 616 000a 04       		.byte	0x4
 617 000b 00       		.byte	0
 618 000c 0000     		.2byte	0
 619 000e 0000     		.2byte	0
 620 0010 00000000 		.4byte	.LFB63
 621 0014 18010000 		.4byte	.LFE63-.LFB63
 622 0018 00000000 		.4byte	0
 623 001c 00000000 		.4byte	0
 624              		.section	.debug_ranges,"",%progbits
 625              	.Ldebug_ranges0:
 626 0000 00000000 		.4byte	.LFB63
 627 0004 18010000 		.4byte	.LFE63
 628 0008 00000000 		.4byte	0
 629 000c 00000000 		.4byte	0
 630              		.section	.debug_line,"",%progbits
 631              	.Ldebug_line0:
 632 0000 A6010000 		.section	.debug_str,"MS",%progbits,1
 632      02005F01 
 632      00000201 
 632      FB0E0D00 
 632      01010101 
 633              	.LASF24:
 634 0000 444D415F 		.ascii	"DMA_1_Chan\000"
 634      315F4368 
 634      616E00
 635              	.LASF28:
 636 000b 41504946 		.ascii	"APIFUNResultArray\000"
 636      554E5265 
 636      73756C74 
 636      41727261 
 636      7900
 637              	.LASF9:
 638 001d 5F5F696E 		.ascii	"__int32_t\000"
 638      7433325F 
 638      7400
 639              	.LASF26:
 640 0027 444D4141 		.ascii	"DMAADCResultArray\000"
 640      44435265 
 640      73756C74 
 640      41727261 
 640      7900
 641              	.LASF32:
 642 0039 433A5C55 		.ascii	"C:\\Users\\elij1\\Desktop\\Mux_SAR_ADC_Test\\Mux_SA"
 642      73657273 
 642      5C656C69 
 642      6A315C44 
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 16


 642      65736B74 
 643 0067 525F4144 		.ascii	"R_ADC_Test.cydsn\000"
 643      435F5465 
 643      73742E63 
 643      7964736E 
 643      00
 644              	.LASF29:
 645 0078 444D4144 		.ascii	"DMADone\000"
 645      6F6E6500 
 646              	.LASF27:
 647 0080 4D454D43 		.ascii	"MEMCPYResultArray\000"
 647      50595265 
 647      73756C74 
 647      41727261 
 647      7900
 648              	.LASF15:
 649 0092 666C6F61 		.ascii	"float\000"
 649      7400
 650              	.LASF22:
 651 0098 4144435F 		.ascii	"ADC_SAR_Seq_1_finalArray\000"
 651      5341525F 
 651      5365715F 
 651      315F6669 
 651      6E616C41 
 652              	.LASF14:
 653 00b1 696E7431 		.ascii	"int16\000"
 653      3600
 654              	.LASF5:
 655 00b7 6C6F6E67 		.ascii	"long unsigned int\000"
 655      20756E73 
 655      69676E65 
 655      6420696E 
 655      7400
 656              	.LASF3:
 657 00c9 73686F72 		.ascii	"short unsigned int\000"
 657      7420756E 
 657      7369676E 
 657      65642069 
 657      6E7400
 658              	.LASF25:
 659 00dc 444D415F 		.ascii	"DMA_1_TD\000"
 659      315F5444 
 659      00
 660              	.LASF23:
 661 00e5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 661      52784275 
 661      66666572 
 661      00
 662              	.LASF1:
 663 00f2 756E7369 		.ascii	"unsigned char\000"
 663      676E6564 
 663      20636861 
 663      7200
 664              	.LASF16:
 665 0100 646F7562 		.ascii	"double\000"
 665      6C6500
 666              	.LASF33:
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 17


 667 0107 6D61696E 		.ascii	"main\000"
 667      00
 668              	.LASF21:
 669 010c 7072696E 		.ascii	"print_nmbr\000"
 669      745F6E6D 
 669      627200
 670              	.LASF12:
 671 0117 75696E74 		.ascii	"uint16\000"
 671      313600
 672              	.LASF13:
 673 011e 75696E74 		.ascii	"uint32\000"
 673      333200
 674              	.LASF8:
 675 0125 756E7369 		.ascii	"unsigned int\000"
 675      676E6564 
 675      20696E74 
 675      00
 676              	.LASF7:
 677 0132 6C6F6E67 		.ascii	"long long unsigned int\000"
 677      206C6F6E 
 677      6720756E 
 677      7369676E 
 677      65642069 
 678              	.LASF20:
 679 0149 6368616E 		.ascii	"chan\000"
 679      00
 680              	.LASF10:
 681 014e 696E7433 		.ascii	"int32_t\000"
 681      325F7400 
 682              	.LASF19:
 683 0156 73697A65 		.ascii	"sizetype\000"
 683      74797065 
 683      00
 684              	.LASF6:
 685 015f 6C6F6E67 		.ascii	"long long int\000"
 685      206C6F6E 
 685      6720696E 
 685      7400
 686              	.LASF31:
 687 016d 6D61696E 		.ascii	"main.c\000"
 687      2E6300
 688              	.LASF17:
 689 0174 63686172 		.ascii	"char\000"
 689      00
 690              	.LASF2:
 691 0179 73686F72 		.ascii	"short int\000"
 691      7420696E 
 691      7400
 692              	.LASF11:
 693 0183 75696E74 		.ascii	"uint8\000"
 693      3800
 694              	.LASF4:
 695 0189 6C6F6E67 		.ascii	"long int\000"
 695      20696E74 
 695      00
 696              	.LASF18:
 697 0192 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\elij1\AppData\Local\Temp\ccO7lNqC.s 			page 18


 697      20646F75 
 697      626C6500 
 698              	.LASF0:
 699 019e 7369676E 		.ascii	"signed char\000"
 699      65642063 
 699      68617200 
 700              	.LASF30:
 701 01aa 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 701      43313120 
 701      352E342E 
 701      31203230 
 701      31363036 
 702 01dd 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 702      20726576 
 702      6973696F 
 702      6E203233 
 702      37373135 
 703 0210 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 703      66756E63 
 703      74696F6E 
 703      2D736563 
 703      74696F6E 
 704              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
